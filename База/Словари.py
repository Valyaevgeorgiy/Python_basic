print('----------5. и 6. Словари и операции с ними----------')

# Словари - это наборы объектов, доступ к которым осуществляется не по индексу, а пo ключу.

# В качестве ключа можно указать неизменяемый объект, например число, строку или кортеж.

# Элементы словаря могут содержать объекты nроизвольного типа данных и иметь
# неограниченную степень вложенности.

# Чтобы nолучить элемент, необходимо указать ключ, который использовался nри сохранении значения.

# В словаре можно изменить элемент, хранящийся по определенному ключу.


# Метод get(<Ключ> [, <Значение no умолчанию>]) позволяет избежать
# вывода сообщения об ошибке при отсутствии указанного ключа:

# если ключ присутствует в словаре, то метод возвращает значение, соответствующее этому ключу

# если ключ отсутствует, то возвращается значение None или значение, указанное во втором nараметре.


# Кроме того, можно воспользоваться методом setdefault(<Ключ>[, <Значение по умолчанию>]) :

# если ключ присутствует в словаре, то метод возвращает значение, соответствующее этому ключу

# если ключ отсутствует, то вставляет новый элемент, со значением, указанным во втором nараметре

# если второй параметр не указан, значением нового элемента будет None.


# рор(<Ключ> [, <Значение по умолчанию>]) - удаляет элемент с указанным ключом и возвращает его значение.

# Если ключ отсутствует, то возвращается значение из второго параметра.

# Если ключ отсутствует и второй параметр не указан, то возбуждается исключение KeyError.

d = {i:'La'*i for i in range(1,10)}
d['Motherland'] = 'Russia'
d['Шампунь'] = 'Жумайсынба'
d[''] = ''
for i,j in d.items():  # аналог enumerate для с словарей
    print(i,j)
for _ in d.values():  # вывод значений
    print(_)
d.update({'Шампунь':'Жумабай'})  # изменяем значение по ключу
for i,j in d.items():
    print(i,j)

a = dict()

a['home'] = [10, 30]
a['shop'] = [20, 20]

a.update({**a, 'home': [30, 50], 'barbershop': [80, 90]})

print(a)